name: Rust CI

on:
  push:
  pull_request:

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - run: cargo clippy --all -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
  
  # Builds for no_std platforms
  no_std:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: cargo build --target ${{ matrix.target }} --no-default-features --features portable

  # x86/x86_64 tests
  x86:
    strategy:
      matrix:
        include:
          # 32-bit Linux/x86
          - target: i686-unknown-linux-gnu
            rust: stable
            deps: sudo apt update && sudo apt install gcc-multilib

          # 64-bit Linux/x86_64
          - target: x86_64-unknown-linux-gnu
            rust: stable
        flags:
          - "-C target-feature=+aes,+ssse3"
          - "-C target-feature=-aes,-ssse3"
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "${{matrix.flags}}"
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: ${{ matrix.deps }}
      - run: cargo test --no-default-features --features=std
      - run: cargo test --all-features
 
  # aarch64 tests
  aarch64:
    strategy:
      matrix:
        rust:
          - stable
        target:
          - aarch64-unknown-linux-gnu
        features:
          - default
        flags:
          - "-C target-feature=+aes,+sha3"
          - "-C target-feature=-aes,-sha3"
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "${{matrix.flags}}"
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: RustCrypto/actions/cross-install@master
      - run: cross test --target ${{ matrix.target }} --no-default-features --features=std
        shell: bash
      - run: cross test --target ${{ matrix.target }} --all-features
        shell: bash

  # build fuzz targets
  fuzz-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - run: cargo +stable install cargo-fuzz --locked
      - run: cargo +nightly fuzz build